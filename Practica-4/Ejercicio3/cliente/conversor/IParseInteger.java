
package cliente.conversor;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IParseInteger", targetNamespace = "http://webService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IParseInteger {


    /**
     * 
     * @param arg0
     * @return
     *     returns int
     * @throws ExcepcionConversion
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "parseInteger", targetNamespace = "http://webService/", className = "cliente.conversor.ParseInteger")
    @ResponseWrapper(localName = "parseIntegerResponse", targetNamespace = "http://webService/", className = "cliente.conversor.ParseIntegerResponse")
    @Action(input = "http://webService/IParseInteger/parseIntegerRequest", output = "http://webService/IParseInteger/parseIntegerResponse", fault = {
        @FaultAction(className = ExcepcionConversion.class, value = "http://webService/IParseInteger/parseInteger/Fault/ExcepcionConversion")
    })
    public int parseInteger(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws ExcepcionConversion
    ;

}
